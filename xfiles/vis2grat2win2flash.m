function Stim =  vis2grat2win2flash(pars,myscreen);% Stim =  vis2grat2win2flash(pars,myscreen);%% code for 2grat2win2flash.x % modified from 2grat2win2 %% NOTE: Spatial frequency is in cpd*100, not any more in cpd*10.%% 2001-10 MC%% parameters of default stimulus: pars = [500 50 250 150 100 100 50 0 45 50 100 0 90 0 0 0 20 30 60]%           [ dur t1 t2 dur1 dur2 sf1 sf2 ph1 ph2 c1 c2 ori1 ori2 x y idiam1 idiam2 odiam1 odiam2 ]%% SEE THE END OF THE FILE FOR CODE USED TO TEST THE FUNCTIONSinPars = [];xpars.dur 	= pars(1)/1000; % durationt(1) 	= pars(2)/1000; % t of onset of patch 1t(2) 	= pars(3)/1000; % t of onset of patch 2d(1) 	= pars(4)/1000; % duration of patch 1d(2) 	= pars(5)/1000; % duration of patch 2SinPars(1).Frequency 	= 1./ltdeg2pix(100/pars(6),myscreen); % sf in cycles/pixSinPars(2).Frequency 	= 1./ltdeg2pix(100/pars(7),myscreen); % sf in cycles/pixphase(1) 		= pars(8)/180*pi;phase(2)		= pars(9)/180*pi;SinPars(1).Contrast 	= pars(10)/100; %  contrast. SinPars(2).Contrast 	= pars(11)/100; %  contrast. SinPars(1).Orientation 	= pars(12) * (pi/180); % orientation SinPars(2).Orientation 	= pars(13) * (pi/180); % orientation ctr.x		= ceil(ltdeg2pix(pars(14)/10,myscreen)); % Centre x (deg*10).ctr.y		= ceil(ltdeg2pix(pars(15)/10,myscreen)); % Centre y (deg*10).diam_inner(1) = ceil(ltdeg2pix(pars(16)/10,myscreen)); % deg*10diam_inner(2) = ceil(ltdeg2pix(pars(17)/10,myscreen)); % deg*10diam_outer(1) = ceil(ltdeg2pix(pars(18)/10,myscreen)); % deg*10diam_outer(2) = ceil(ltdeg2pix(pars(19)/10,myscreen)); % deg*10% ------ and into the relevant fields of MovieParsMoviePars.nx = max( diam_outer ); MoviePars.ny = max( diam_outer );MoviePars.nframes = round(myscreen.FrameRate * xpars.dur); % frames/sec * sec = frames% ------ that's it, no more use for xparsclear xpars%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Stim = [];% ---- make a grid of x and yx = 1-MoviePars.nx/2:MoviePars.nx/2;y = 1-MoviePars.ny/2:MoviePars.ny/2;[xx,yy]=meshgrid(x,y);% ---- make 2 grids of angular frequency:angfreq = {[], []};% the minus sign below is for consistency with the orientation of other stimulifor igrat = 1:2	angfreq{igrat} = 2*pi*SinPars(igrat).Frequency*...					( 	-cos(SinPars(igrat).Orientation).*xx+...						-sin(SinPars(igrat).Orientation).*yy );endrrsq = xx.^2+yy.^2;window = {};window{1} = ( rrsq<(diam_outer(1)/2)^2 & rrsq>=(diam_inner(1)/2)^2 ); window{2} = ( rrsq<(diam_outer(2)/2)^2 & rrsq>=(diam_inner(2)/2)^2 ); % --------------------- make the frames --------------------------------frames = cell(4,1);% -------- stim 1 aloneframes{1} = window{1}.*SinPars(1).Contrast.*sin(phase(1)+angfreq{1});% -------- stim 2 aloneframes{2} = window{2}.*SinPars(2).Contrast.*sin(phase(2)+angfreq{2});% -------- stims 1 and 2 togetherframes{3} = frames{1} + frames{2};if any(frames{3}>1) | any(frames{3}<-1)	disp('WARNING!!! Contrasts add up to more than 100!!! Stimulus will be screwy.');end% -------- the blankframes{4} = zeros(MoviePars.nx,MoviePars.ny);% convert to uint and rescalefor iframe=1:4	% at this point frames goes bet -1 and 1	frames{iframe} = uint8(round((frames{iframe}+1)*126 + 3)); 	% and at this point frames goes bet 3 and 255endStim.frames{1} = frames;Stim = ltMakeOffScreenWindows(myscreen,Stim,1);% ----------------- make the look-up tables ----------------------------linClut = [ [128 128 128]; [255 255 255]; [  1   1   1]; round(linspace(1,255,253))'*[1 1 1] ];Stim.luts{1} = linClut;% ------------------- determine the position ----------------------------% coordinates of center of stimulus with respect to the top left of the screenx = ctr.x + myscreen.Xmax/2;y = ctr.y + myscreen.Ymax/2;% coordinates of top left of stimulus with respect to the top left of the screenx = x - round(MoviePars.nx/2);y = y - round(MoviePars.ny/2);Stim.position(1,:) = [x,y,x+MoviePars.nx,y+MoviePars.ny];% ----------------------- sequences ------------------------------------Stim.nperiods = 1;Stim.sequence.luts = ones(1,MoviePars.nframes);ion  = round( myscreen.FrameRate .* t );ioff = round( myscreen.FrameRate .* (t + d) );ioff = min(MoviePars.nframes,ioff);ion  = min(MoviePars.nframes,ion );ioff = max(1, ioff);ion  = max(1, ion );framelist = zeros(1,MoviePars.nframes);framelist(ion(1):ioff(1)) = 1;framelist(ion(2):ioff(2)) = 2 + framelist(ion(2):ioff(2));% put a 4 where there is a blankframelist(find(framelist==0)) = 4;Stim.sequence.frames = framelist;return%----------------------------------------------------------------------------% TO TEST IT:myscreen = ltScreenInitialize(1);		myscreen.Dist = 65;ltLoadCalibration(myscreen,3);Stim = vis2grat2win2flash([500 50 250 150 100 100  50 0 45 50 100 0 90 0 0 0 20 30 60],myscreen);Stim = vis2grat2win2flash([500 50 200  50  50  50  50 0 0 20 20 30 30 0 0 0 0 60 60],myscreen); %           [ dur t1 t2 dur1 dur2 sf1 sf2 ph1 ph2 c1 c2 ori1 ori2 x y idiam1 idiam2 odiam1 odiam2 ]vsPlayStimulus(myscreen,Stim,'norush');	vsPlayStimulus(myscreen,Stim);	%ltClearStimulus(Stim,'nowarnings'); SCREEN('CloseAll');	