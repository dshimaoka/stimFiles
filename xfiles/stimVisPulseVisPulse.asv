function SS = stimVisPulseVisPulse(myScreenInfo,Pars)
% stimVisPulseVisPulse makes a visual stimulus pulse as a primer and a
% visual stimulus pulse as a tester
%
% SS = stimVisPulseVisPulse(myScreenInfo,Pars) returns an object SS of type ScreenStim
%
% SS = stimVisPulseVisPulse(myScreenInfo) uses the default parameters
%
% 2011-03 MC wrote stimFlashedBarWaveOutput.m
% 2012-02 ND modified to create stimWavePulseVisPulse.m
% 2012-03 ND modified to create stimVisPulseVisPulse.m

%% Basics

if nargin < 1
    error('Must at least specify myScreenInfo');
end

if nargin < 2
    Pars = [];
end

%% The parameters and their definition

pp = cell(1,1);
pp{1}  = {'dur',         'Stimulus duration (s *10)',               50,    1,    600};
pp{2}  = {'x1',         'Center, x (deg*10)',                       0,    -900,  900};
pp{3}  = {'y1',         'Center, y (deg*10)',                       0,    -300,  300};
pp{4}  = {'tonprim',     'Onset time of primer (ms)',               1000,  1,    6000};
pp{5}  = {'toffprim',    'Offset time of primer (ms)',              1500,  1,    6000};
pp{6}  = {'tontest',     'Onset time of test (ms)',                 500,   0,    6000};
pp{7}  = {'tofftest',    'Offset time of test (ms)',                900,   0,    6000};
pp{8}  = {'cprim',       'Contrast of primer',                      50,    0,    100};
pp{9}  = {'oriprim',     'Orientation of primer (deg)',             45,    0,    360};
pp{10}  = {'sfprim',      'Spatial frequency of primer (deg*100)',  5,     0,    1000};
pp{11}  = {'tfprim',      'Temporal frequency of primer (Hz*10)',   10,    1,    200};
pp{12}  = {'dimaprim',   'Size1 of test (deg*10)',                  0,   1,    500};
pp{13}  = {'dimbprim',   'Size2 of test (deg*10)',                  250,   1,    500};
pp{14}  = {'ctest',       'Contrast of test',                       50,    0,    100};
pp{15}  = {'oritest',     'Orientation of test (deg)',              45,    0,    360};
pp{16}  = {'sftest',      'Spatial frequency of test (deg*100)',    5,     0,    1000};
pp{17}  = {'tftest',      'Temporal frequency of test (Hz*10)',     10,    1,    200};
pp{18}  = {'dimatest',   'Size1 of test (deg*10)',                  0,   1,    500};
pp{19}  = {'dimbtest',   'Size2 of test (deg*10)',                  250,   1,    500};
pp{20} = {'shape',       'shape (0 = circle; 1 = rect)',            0,     0,    1};

x = XFile('stimVisPulseVisPulse',pp);
% x.Write; % call this ONCE: it writes the .x file


%% Parse the parameters

if isempty(Pars)
    Pars = x.ParDefaults;
end

%% get the parameters relevant for the primer and the test

% first for the primer
% pp_primer{1}  = {'dur',   'Stimulus duration (s *10)',    50,   1,   600};
% pp_primer{2}  = {'tfprim',   'Temporal frequency (Hz*10)',   40,   1,   200};
% pp_primer{3}  = {'sfprim',   'Spatial frequency (cpd*100)',  5,    0,   1000};
% pp_primer{4}  = {'cprim',    'Contrast (%)'                  50,   0,   100};
% pp_primer{5}  = {'oriprim',  'Orientation (deg)',            45,   0,   360};
% pp_primer{6}  = {'dimprim',  'Diameter (deg*10)'             250,  1,   500};
% pp_primer{7}  = {'dimprim',  'Diameter (deg*10)'             250,  1,   500};
% pp_primer{8}  = {'x1',    'Focus position, x (deg*10)',   0,   -900, 900};
% pp_primer{9}  = {'y1',    'Focus position, y (deg*10)',   0,   -300, 300};
% pp_primer{10} = {'tonprim',   'onset time(ms)',               300,  1,   6000};
% pp_primer{11} = {'toffprim',  'offset time(ms)',              1300, 1,   6000};
% pp_primer{12} = {'shape', 'shape (0 = circle; 1 = rect)', 1,    0,   1};
ParsPrimer = Pars([1 11 10 8 9 12 13 2 3 4 5 20]);

% next for the test
% pp_test{1}  = {'dur',   'Stimulus duration (s *10)',    50,   1,   600};
% pp_test{2}  = {'tfprim',   'Temporal frequency (Hz*10)',   40,   1,   200};
% pp_test{3}  = {'sfprim',   'Spatial frequency (cpd*100)',  5,    0,   1000};
% pp_test{4}  = {'cprim',    'Contrast (%)'                  50,   0,   100};
% pp_test{5}  = {'oriprim',  'Orientation (deg)',            45,   0,   360};
% pp_test{6}  = {'dimprim',  'Diameter (deg*10)'             250,  1,   500};
% pp_test{7}  = {'dimprim',  'Diameter (deg*10)'             250,  1,   500};
% pp_test{8}  = {'x1',    'Focus position, x (deg*10)',   0,   -900, 900};
% pp_primer{9}  = {'y1',    'Focus position, y (deg*10)',   0,   -300, 300};
% pp_primer{10} = {'tonprim',   'onset time(ms)',               300,  1,   6000};
% pp_primer{11} = {'toffprim',  'offset time(ms)',              1300, 1,   6000};
% pp_primer{12} = {'shape', 'shape (0 = circle; 1 = rect)', 1,    0,   1};
ParsTest = [Pars([1 14 15]); Pars([4 16 5 16 5]); 0; Pars(1)*100-5; 0];

myScreenStimVisPrimer = ScreenStim.Make( myScreenInfo,'stimFlashedGrat',ParsPrimer );
myScreenStimVisTest = ScreenStim.Make( myScreenInfo,'stimFlashedGrat',ParsTest );
myScreenStimWav.MinusOneToOne = myScreenStimVis.MinusOneToOne;

SS = Merge( myScreenInfo, myScreenStimVisPrimer, myScreenStimVisTest);
SS.Type = x.Name;
SS.Parameters = Pars;

return

%% To test the code

myScreenStim = ScreenStim.Make(myScreenInfo,'stimVisPulseVisPulse'); %#ok<UNRCH>
myScreenStim.Show(myScreenInfo) %#ok<UNRCH>

% Screen('DrawTextures', myScreenInfo.windowPtr, SS.ImagePointers(3), [1; 1; wid; len], [ x1-wid, y1-len, x1+wid, y1+len ]);
% Screen('Flip', myScreenInfo.windowPtr);
 
