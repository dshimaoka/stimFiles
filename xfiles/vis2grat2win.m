function Stim =  vis2grat2win(pars,myscreen);% Stim =  vis2grat2win(pars,myscreen);%% code for 2grat2win.x (derived from visplaid.m)%% 2000-07 MC%% parameters of default stimulus: pars = [20 30 10 10 50 100 0 90 0 0 0 20 30 60 5]% ------ parse the pars (excuse the pun)xpars.dur 	= pars(1)/10; % duration.xpars.tf	= pars(2)/10; %  Temporal frequency.ctr.x		= ceil(ltdeg2pix(pars(09)/10,myscreen)); % Centre x (deg*10).ctr.y		= ceil(ltdeg2pix(pars(10)/10,myscreen)); % Centre y (deg*10).diam_inner(1) = ceil(ltdeg2pix(pars(11)/10,myscreen)); % deg*10diam_outer(1) = ceil(ltdeg2pix(pars(12)/10,myscreen)); % deg*10diam_inner(2) = ceil(ltdeg2pix(pars(13)/10,myscreen)); % deg*10diam_outer(2) = ceil(ltdeg2pix(pars(14)/10,myscreen)); % deg*10tfreqratio	= pars(15); % ratio of tf2 to tf1: 1, 2, 3, ...SinPars = [];SinPars(1).Frequency 	= 1./ltdeg2pix(10/pars(3),myscreen); % sf in cycles/pixSinPars(2).Frequency 	= 1./ltdeg2pix(10/pars(4),myscreen); % sf in cycles/pixSinPars(1).Contrast 	= pars(5)/100; %  contrast. SinPars(2).Contrast 	= pars(6)/100; %  contrast. SinPars(1).Orientation 	= pars(7) * (pi/180); % orientation SinPars(2).Orientation 	= pars(8) * (pi/180); % orientation % ------ and into the relevant fields of MovieParsMoviePars.nx = max( diam_outer ); MoviePars.ny = max( diam_outer );MoviePars.nframes = round(myscreen.FrameRate / xpars.tf); % frames/sec * sec/cycle = frames/cycle% ------ other xpars to be keptnperiods = floor(xpars.dur*xpars.tf);% ------ that's it, no more use for xparsclear xpars%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Stim = [];% ---- make a grid of x and yx = 1-MoviePars.nx/2:MoviePars.nx/2;y = 1-MoviePars.ny/2:MoviePars.ny/2;[xx,yy]=meshgrid(x,y);% ---- make 2 grids of angular frequency:angfreq = {[], []};% the minus sign below is for consistency with the orientation of other stimulifor igrat = 1:2	angfreq{igrat} = 2*pi*SinPars(igrat).Frequency*...					( 	-cos(SinPars(igrat).Orientation).*xx+...						-sin(SinPars(igrat).Orientation).*yy );endrrsq = xx.^2+yy.^2;window = {};window{1} = ( rrsq<(diam_outer(1)/2)^2 & rrsq>=(diam_inner(1)/2)^2 ); window{2} = ( rrsq<(diam_outer(2)/2)^2 & rrsq>=(diam_inner(2)/2)^2 ); % sanity check on contrastsif any(window{1}(:) & window{2}(:))	if SinPars(1).Contrast + SinPars(2).Contrast > 1		SinPars(1).Contrast = min(0.5,SinPars(1).Contrast);		SinPars(2).Contrast = min(0.5,SinPars(2).Contrast);		disp('-------> OUCH!!! visgrat2win changed your contrasts: OVERLAPPING CONTRASTS WERE ADDING UP TO > 100%!!!');	endend% make the movie ------------------------------------------movie = cell(MoviePars.nframes,1);for iframe=1:MoviePars.nframes	phase(1) = 2*pi*iframe/MoviePars.nframes;	phase(2) = 2*pi*iframe/MoviePars.nframes*tfreqratio;	movieimage = zeros(MoviePars.nx,MoviePars.ny);	for igrat = 1:2		movieimage = movieimage+window{igrat}.*SinPars(igrat).Contrast.*sin(phase(igrat)+angfreq{igrat});	end	% at this point movieimage goes bet -1 and 1	movie{iframe} = uint8(round((movieimage+1)*126 + 3)); 	% and at this point movieimage goes bet 3 and 255endStim.frames{1} = movie;Stim = ltMakeOffScreenWindows(myscreen,Stim,1);% define the look-up tables for this stimuluslinClut = [ [128 128 128]; [255 255 255]; [  1   1   1]; round(linspace(1,255,253))'*[1 1 1] ];Stim.luts{1} = linClut;% coordinates of center of stimulus with respect to the top left of the screenx = ctr.x + myscreen.Xmax/2;y = ctr.y + myscreen.Ymax/2;% coordinates of top left of stimulus with respect to the top left of the screenx = x - round(MoviePars.nx/2);y = y - round(MoviePars.ny/2);Stim.position(1,:) = [x,y,x+MoviePars.nx,y+MoviePars.ny];% define the sequences for the frames and the lutsStim.sequence.frames = [1:MoviePars.nframes];Stim.sequence.luts = ones(1,MoviePars.nframes);% define the number of times you want to see the movie		Stim.nperiods = nperiods;	