function Stim =  visgratgrat(pars,myscreen);% Stim =  visgratgrat(pars,myscreen);%% code for gratgrat.x % (grating of gratings)%% 2002-02 MC%% parameters are :[ dur tf x y diam c e_sf e_ph e_ori c_sf100 c_ph c_ori ]%% SEE THE END OF THE FILE FOR CODE USED TO TEST THE FUNCTIONif isempty(pars)	pars = [20 30 0 0 100 50 10 45 90 50 0 180 ]endduration 	= pars(1)/10; % duration.Envelope.x		= ceil(ltdeg2pix(pars(3)/10,myscreen)); % Centre x (deg*10).Envelope.y		= ceil(ltdeg2pix(pars(4)/10,myscreen)); % Centre y (deg*10).Envelope.npix 	= ceil(ltdeg2pix(pars(5)/10,myscreen)); % deg*10Envelope.SpatFreq 	= 1./ltdeg2pix(100/pars(7),myscreen); % sf in cycles/pixEnvelope.Phase		= pars(8)/180*pi;Envelope.Orientation = pars(9) * (pi/180); % orientation %--------Carrier.SpatialFrequency 	= pars(10)/100; % sf in cycles/degreeCarrier.phase		= pars(11)/180*pi;Carrier.Orientation = pars(12) * (pi/180); % orientation Carrier.innerRad	= 0;Carrier.outerRad	= Envelope.npix/2; % pixels, can be a fractionCarrier.Contrast	= pars( 6)/100; %  contrast. Carrier.tFreq		= pars(2)/10; %  Temporal frequency.% ------ nframes = round(myscreen.FrameRate /Carrier.tFreq); % frames/sec * sec/cycle = frames/cyclenperiods = floor(duration*Carrier.tFreq);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Stim = [];% ---- make a grid of x and y[xx,yy]=meshgrid(1-Envelope.npix/2:Envelope.npix/2,1-Envelope.npix/2:Envelope.npix/2);Envelope.angfreq = 2*pi*Envelope.SpatFreq*(-cos(Envelope.Orientation).*xx-sin(Envelope.Orientation).*yy );Envelope.values = cos(Envelope.Phase+Envelope.angfreq) > 0;Stim.frames{1}{1} = ltMakeGratingFrame(Carrier,myscreen,'reserve3');Stim.frames{1}{1}(find(Envelope.values == 0)) = 0;[Cluts, nCluts] = ltMakeGratingCluts(Carrier,myscreen,'reserve3');Stim.luts = cell(nCluts,1); % allocationfor ii = 1:nCluts	Stim.luts{ii} = squeeze(Cluts(ii,:,:)); % why???endStim.sequence.frames 	= ones(1,nframes); % this will stay like thatStim.sequence.luts 		= ones(1,nframes); % this will change, it is just an allocationfor ii = 0:nframes - 1	Stim.sequence.luts(ii+1) = mod(ii,nCluts) + 1;endStim = ltMakeOffScreenWindows(myscreen,Stim,1);% coordinates of center of stimulus with respect to the top left of the screenx = Envelope.x + myscreen.Xmax/2;y = Envelope.y + myscreen.Ymax/2;% coordinates of top left of stimulus with respect to the top left of the screenx = x - round(Envelope.npix/2);y = y - round(Envelope.npix/2);Stim.position(1,:) = [x,y,x+Envelope.npix,y+Envelope.npix];% define the number of times you want to see the movie		Stim.nperiods = nperiods;return%----------------------------------------------------------------------------% TO TEST IT:myscreen = ltScreenInitialize(1);		myscreen.Dist = 65;ltLoadCalibration(myscreen,3);dur = 20;tf 	= 20;x	= 0;y	= 0;diam= 200;c 	= 50;e_sf100 = 25;e_ph = 79;e_ori = 135;c_sf100 = 100;c_ph = 45;c_ori = 45 ;pars = [ dur tf x y diam c e_sf100 e_ph e_ori c_sf100 c_ph c_ori ];ltClearStimulus(Stim1,'nowarnings'); ltClearStimulus(Stim2,'nowarnings'); tic; Stim1 = visgratgrat   (pars,myscreen); toctic; Stim2 = visgratgratlut(pars,myscreen); tocvsPlayStimulus(myscreen,Stim1,'norush');	vsPlayStimulus(myscreen,Stim2,'norush');	SCREEN('CloseAll');	