function Stim =  visgratgauss(pars,myscreen);% Stim =  visgratgauss(pars,myscreen);%% YOU MUST HAVE Gauss.Contrast > (1-Grat.Contrast)/(1+Grat.Contrast)% %2002-05 MC (code from visgratgrat)%2002-05 VM g_sigma can be zero, introduced t1 and t2%% parameters are : [ dur x y diam tf c sf100 ph ori g_sigma g_c ]%% SEE THE END OF THE FILE FOR CODE USED TO TEST THE FUNCTIONif isempty(pars)	pars = [50 0 0 100  60 20 80 45 90 30 -80 ];endp.duration 	= pars(1)/10; % duration.p.x		= ceil(ltdeg2pix(pars(2)/10,myscreen)); % Centre x (deg*10).p.y		= ceil(ltdeg2pix(pars(3)/10,myscreen)); % Centre y (deg*10).p.npix 	= ceil(ltdeg2pix(pars(4)/10,myscreen)); % deg*10p.npix = max(p.npix,1); % safety measure to ensure there is at least 1 pixelGrat.tf 			= pars(5)/10; %  Temporal frequency.Grat.Contrast		= pars(6)/100; %  contrast. Grat.SpatFreq 		= 1./ltdeg2pix(100/pars(7),myscreen); % sf in cycles/pixGrat.Phase			= pars(8)/180*pi;Grat.Orientation 	= pars(9) * (pi/180); % orientation Gauss.sigma			= ltdeg2pix(pars(10)/10,myscreen); % sigma in pixGauss.Contrast		= pars(11)/100; %  contrast of gaussianif Gauss.Contrast > (1-Grat.Contrast)/(1+Grat.Contrast)	disp('WARNING'); disp('WARNING');	warning('Gaussian contrast is too high! Setting it to ZERO!!!');	Gauss.Contrast = 0;	p.duration = 0.5; % make it short, so user realizes there is something wrongend% ------ Grat.period = round(myscreen.FrameRate / Grat.tf); % frames/sec * sec/cycle = frames/cyclenperiods = ceil(p.duration*myscreen.FrameRate / (3*Grat.period)) * 3;nframes = nperiods*Grat.period;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Stim = [];% ---- make a grid of x and y[xx,yy]=meshgrid(1-p.npix/2:p.npix/2,1-p.npix/2:p.npix/2);window = ( (xx.^2+yy.^2)<(p.npix/2)^2 );if Gauss.sigma > 0	meanlight = 0.5 + window.*Gauss.Contrast/2.*exp(-(xx.^2+yy.^2)/(2*Gauss.sigma^2)); % bet 0 (black) and 1 (white)else	meanlight = 0.5 + window.*Gauss.Contrast/2; % a uniform increase in mean luminanceend% figure; imagesc(meanlight(1)); colormap gray; colorbarGrat.angfreq = 2*pi* Grat.SpatFreq*(-cos( Grat.Orientation).*xx-sin( Grat.Orientation).*yy );% make the movie movie = cell(Grat.period*2,1);% The frames without the gaussian intenstity profilefor iframe = 1:Grat.period	movieimage = (meanlight*0 + 0.5).*[1+window.*Grat.Contrast.*sin( 2*pi*iframe/Grat.period + Grat.Phase + Grat.angfreq )];	% figure; imagesc(movieimage); colormap gray; colorbar	% at this point movieimage goes bet 0 and 1	movie{iframe} = uint8(round(movieimage*252 + 3)); 	% and at this point movieimage goes bet 3 and 255end% The frames with gaussianfor iframe = Grat.period+1:Grat.period*2	movieimage = meanlight.*[1+window.*Grat.Contrast.*sin( 2*pi*iframe/Grat.period + Grat.Phase + Grat.angfreq )];	% figure; imagesc(movieimage); colormap gray; colorbar	% at this point movieimage goes bet 0 and 1	movie{iframe} = uint8(round(movieimage*252 + 3)); 	% and at this point movieimage goes bet 3 and 255endStim.frames{1} = movie;Stim = ltMakeOffScreenWindows(myscreen,Stim,1);% define the look-up tables linClut = [ [128 128 128]; [255 255 255]; [  1   1   1]; round(linspace(1,255,253))'*[1 1 1] ];Stim.luts{1} = linClut;% coordinates of center of stimulus with respect to the top left of the screenx = p.x + myscreen.Xmax/2;y = p.y + myscreen.Ymax/2;% coordinates of top left of stimulus with respect to the top left of the screenx = x - round(p.npix/2);y = y - round(p.npix/2);Stim.position(1,:) = [x,y,x+p.npix,y+p.npix];% define the sequences for the frames and the lutsStim.sequence.frames = zeros(1,nframes);Stim.sequence.frames(1:nframes/3) = mod((1:nframes/3)-1,Grat.period)+1;Stim.sequence.frames(nframes*1/3+1:nframes*2/3) = mod((1:nframes/3)-1,Grat.period)+1+Grat.period;Stim.sequence.frames(nframes*2/3+1:nframes) = mod((1:nframes/3)-1,Grat.period)+1;Stim.sequence.luts = ones(1,nframes);% define the number of times you want to see the movie		Stim.nperiods = 1;return%----------------------------------------------------------------------------% TO TEST IT:myscreen = ltScreenInitialize(1);		myscreen.Dist = 65;ltLoadCalibration(myscreen,3);dur=100; x=0; y=0; diam=120; tf=60; c=10; sf100=80; ph=45; ori=90; g_sigma=10; g_c=80;if exist(Stim), ltClearStimulus(Stim,'nowarnings'); endStim = visgratgauss([ dur x y diam tf c sf100 ph ori g_sigma g_c ],myscreen);vsPlayStimulus(myscreen,Stim,'norush');	SCREEN('CloseAll');