function Stim =  vbardriftgrat(pars,myscreen)% Stim =  vbardriftgrat(pars,myscreen)%% code for vbardriftgrat.x%% MC 2004%% SEE CODE AT THE END OF THE FUNCTION TO TEST % BUGGY: it always does one period of envelope = one period of carrier% % ------------- read the parameters of counterphase gratingdur 	= pars( 1)/10;       % s, total durationori		= pars( 2)*(pi/180);	% carrier orientation (fixed)tf      = pars( 3)/10;       % Hz, temp freq of grating sf      = pars( 4)/100;      % cpd, spat freq of gratingphase   = pars( 5)*(pi/180); % radians, phase of grating c       = pars( 6)/100;      % percent contrast sqwv	= pars( 7);			% 0=sine, 1=squareEtf 	= pars( 8)/10;  	% Hz, temporal frequency of envelopeEwidth  = pars( 9)/10; 		% deg, width of envelopeEori	= pars(10); 		% deg, must be 0 or 90Enbars  = pars(11);			% number of barsctrX	= pars(12)/10; 		% deg, position x of center of windowctrY	= pars(13)/10; 		% deg, position y of center of windowsz		= pars(14)/10;		% deg, size of the overall square	reverseflag = 0;if ori==180 | ori==270	reverseflag = 1;	ori = ori-180;endSinPars = [];SinPars.tFreq	 			= tf; 	SinPars.SpatialFrequency  	= sf; 	SinPars.Frequency			= 1/ltdeg2pix(1/sf,myscreen);SinPars.phase  				= phase; 		SinPars.Contrast 	 		= c; SinPars.sqwv	            = sqwv;	% 0=sine, 1=squareSinPars.Orientation 		= ori;sizepix = ceil(ltdeg2pix(sz,myscreen));ctrXpix = round(ltdeg2pix(ctrX,myscreen)+myscreen.Xmax/2);ctrYpix = round(ltdeg2pix(ctrY,myscreen)+myscreen.Ymax/2);if  ctrXpix + sizepix/2 > myscreen.Xmax | ctrXpix - sizepix/2 < 0 | ...	ctrYpix + sizepix/2 > myscreen.Ymax | ctrYpix - sizepix/2 < 0 	fprintf(1,'\n\n Warning!!! size too big. Rescaling.\n\n');	ctrXpix = round(myscreen.Xmax/2);	ctrYpix = round(myscreen.Ymax/2);	sizepix = 2;endif Eori==0	SinPars.sizeX = round(ltdeg2pix(Ewidth, myscreen));	SinPars.sizeY = round(sizepix);else	SinPars.sizeX = round(sizepix);		SinPars.sizeY = round(ltdeg2pix(Ewidth, myscreen));endnpos		= round(myscreen.FrameRate / Etf );nperiods	= ceil(dur*Etf);% vector of positions within the squarepos = round( (sizepix/npos)/2 + linspace(0,sizepix,npos+1) );pos = pos(1:npos);if reverseflag	pos = pos(end:-1:1);end%-------------- create the stim structure --------------window = zeros( sizepix, sizepix, npos );for ipos = 1:npos	for ibar = 1:Enbars		a =  pos(ipos) - round(SinPars.sizeX/2 - (ibar-1)*sizepix/Enbars );		if Eori==0			b =  a + SinPars.sizeX-1;			window(:, mod([a:b]-1,sizepix)+1, ipos ) = 1;		else			b =  a + SinPars.sizeY -1;					window(mod([a:b]-1,sizepix)+1, :, ipos ) = 1;		end	endendStim = [];Stim.luts{1} = [ [128 128 128]; [255 255 255]; [  1   1   1]; round(linspace(1,255,253))'*[1 1 1] ];MoviePars.nx      = sizepix;MoviePars.ny      = sizepix;MoviePars.nframes = npos;Stim.frames{1} = ltMakeGratingMovie(SinPars,MoviePars,window,'reserve3')Stim = ltMakeOffScreenWindows(myscreen,Stim,0); % put the flag to 1 if you are debuggingStim.sequence.luts = ones(1,npos);Stim.sequence.frames 	= [1:npos]; %------- define position vector	startX = round(ctrXpix - sizepix/2);startY = round(ctrYpix - sizepix/2);Stim.position(1,:) = [startX startY startX+sizepix startY+sizepix]; % this is wrong, should be centeredStim.nperiods = nperiods;return%--------------------------------------------------------------------------------------------% TO TEST IT:myscreen = ltScreenInitialize(1);		myscreen.Dist = 65;ltLoadCalibration(myscreen,3);dur 	= 40;       % s*10, total duration%---- carrier parametersori		= 90;		% degtf      = 50;       % Hz*10sf      = 100;       % cpd*100phase   = 0; 		% deg c       = 100;       % percent sqwv	= 0;		% 0=sine, 1=square%---- envelope parametersEtf 	= 10;  		% Hz*10Ewidth  = 40; 		% deg*10Eori	= 0; 		% deg, must be 0 or 90Enbars  = 2;	% number of barsctrX	= 0; 		% deg*10ctrY	= 0; 		% deg*10sz		= 200;		% deg*10pars = [ dur ori tf sf phase c sqwv Etf Ewidth Eori Enbars ctrX ctrY sz];ltClearStimulus(Stim,'nowarnings'); Stim = vbardriftgrat(pars,myscreen);vsPlayStimulus(myscreen,Stim,'norush');	SCREEN('CloseAll');