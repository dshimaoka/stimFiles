function SS = stimSoundcardSound(myScreenInfo, Pars)% One grating, drifting or flickering, in disks or annuli or rectangles%% SS = stimGratingWithMask(myScreenInfo, Pars)%% SS = stimGratingWithMask(myScreenInfo) uses the default parameters%% 2015-05 SS%% Basicsif nargin < 1    error('Must at least specify myScreenInfo');endif nargin < 2    Pars = [];end%% The parameters and their definitionpp = cell(1,1);pp{1} = {'dur',       'Stimulus duration (s *10)',        1,   1, 600};pp{2} = {'lr',	      'Mean luminance of red gun (%)',    50,  0, 100};pp{3} = {'lg',        'Mean luminance of green gun (%)',  50,  0, 100};pp{4} = {'lb',        'Mean luminance of blue gun (%)',   50,  0, 100};pp{5} = {'idsou',     'id number of sound to be played',  1,   1, 1000};pp{6} = {'tsou',      'onset time of sound (s*10)',       0,   0, 600};pp{7} = {'asou',      'amplitude of sound (%)',               100, 0, 10000};x = XFile('stimSoundcardSound', pp);% x.Write; % call this ONCE: it writes the .x file%% Parse the parametersif isempty(Pars)    Pars = x.ParDefaults;enddd 				 = load(sprintf('C:\\StimulusDATA\\sound%d.mat', Pars(5)));dur         = Pars(1)/10;           % smm 	= Pars(2:4) /100;          % between 0 and 1%% Make the stimulusSS = ScreenStim; % initializationSS.Type = x.Name;SS.Parameters = Pars;SS.nTextures = 1;SS.nFrames = ceil( myScreenInfo.FrameRate*dur );SS.Orientations = zeros(1, SS.nFrames);SS.Amplitudes = ones(1,SS.nFrames); % global alpha valueSS.SourceRects = repmat([1; 1; 2; 2],[1 1 SS.nFrames]);SS.DestRects   = repmat([1; 1; 2; 2],[1 1 SS.nFrames]);SS.MinusOneToOne = false;%SS.UseAlpha = true;SS.nImages = 1; % +1 for maskImageTextures = {zeros(3)};SS.BackgroundColor = round(255 * mm);SS.BackgroundPersists = true;SS.ImageSequence = ones(1,SS.nFrames);SS.WaveSoundcard = Pars(7)/100 * dd.wave;SS = SS.LoadImageTextures( myScreenInfo, ImageTextures );return%% to test the functionRigInfo = RigInfoGet; %#ok<UNRCH>myScreenInfo = ScreenInfo(RigInfo);myScreenInfo = myScreenInfo.CalibrationLoad;SS = stimGratingWithMask(myScreenInfo);show(SS, myScreenInfo);Screen('CloseAll');% Play(SS, myScreenInfo)